////////////////////////////////////////////////////////////////////////////////
// Filename: alphamap.ps
////////////////////////////////////////////////////////////////////////////////


/////////////
// GLOBALS //
/////////////

Texture2D shaderTexture1 : register(t0);
Texture2D shaderTexture2 : register(t1);
Texture2D shaderTexture3 : register(t2);
SamplerState SampleType : register(s0);


//////////////
// TYPEDEFS //
//////////////
struct PixelInputType
{
    float4 position : SV_POSITION;
    float2 tex : TEXCOORD0;
};


////////////////////////////////////////////////////////////////////////////////
// Pixel Shader
////////////////////////////////////////////////////////////////////////////////
float4 AlphaMapPixelShader(PixelInputType input) : SV_TARGET
{
    float4 color1;
    float4 color2;
    float4 alphaValue;
    float4 lightColor;
    float4 finalColor;
    float4 blendColor;

    // Get the pixel color from the color texture.
    color1 = shaderTexture1.Sample(SampleType, input.tex);

    // Get the pixel color from the color texture.
    color2 = shaderTexture2.Sample(SampleType, input.tex);

    // Get the pixel color from the alpha texture.
    alphaValue  = shaderTexture3.Sample(SampleType, input.tex);

    // Get the pixel color from the light map.
    //lightColor = shaderTexture3.Sample(SampleType, input.tex);

    // Combine the two textures based on the alpha value.
    blendColor = ((alphaValue - 0.5f) * color1) + ((1.0 - alphaValue + 0.5f) * color2);

    // Saturate the final color.
    blendColor = saturate(blendColor);
	
    // Blend the two pixels together.
    //finalColor = blendColor * lightColor * 1.5f;

    return blendColor;
}